apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'jetty'
[jettyRun, jettyRunWar]*.configure {
    def httpsConnector = jettyRun.class.classLoader.loadClass('org.mortbay.jetty.security.SslSocketConnector').newInstance()
    httpsConnector.setPort(8444);
    httpsConnector.setKeystore("jetty-ssl.keystore");
    httpsConnector.setPassword("1-liner");
    httpsConnector.setKeyPassword("1-liner");

    def httpConnector = jettyRun.class.classLoader.loadClass('org.mortbay.jetty.nio.SelectChannelConnector').newInstance()
    httpConnector.setPort(8081);

    connectors = [httpsConnector, httpConnector]
}
[jettyRun, jettyRunWar]*.contextPath = '/'
sourceCompatibility = 1.6
repositories {
    mavenCentral()
}

println "Building OWASP 1-Liner by @johnwilander"

dependencies {
    providedCompile 'javax.servlet:servlet-api:2.5'
    compile 'org.springframework:spring:2.5.6.SEC03'
    compile 'commons-logging:commons-logging:1.1.1'
    compile 'com.sun.jersey:jersey-core:1.12'
    compile 'com.sun.jersey:jersey-servlet:1.12'
    compile 'com.sun.jersey:jersey-server:1.12'
    compile 'com.sun.jersey:jersey-json:1.12'
    compile('com.sun.jersey.contribs:jersey-spring:1.12') {
        exclude group: 'org.springframework', module: 'spring'
    }
    compile 'com.sun.xml.bind:jaxb-impl:2.2.5'
    compile 'javax.ws.rs:jsr311-api:1.1.1'
    compile 'org.codehaus.jackson:jackson-core-asl:1.9.5'
    compile 'org.codehaus.jackson:jackson-mapper-asl:1.9.5'
    compile 'org.codehaus.jackson:jackson-jaxrs:1.9.5'
    compile 'log4j:log4j:1.2.16'
    compile 'org.owasp:antisamy:1.4'
    testCompile 'org.springframework:spring-test:2.5.6.SEC03'
    testCompile 'junit:junit:4.10'
    testCompile 'org.mockito:mockito-all:1.9.0'
}