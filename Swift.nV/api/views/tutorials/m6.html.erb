<div class="panel-group" id="accordion">
<h4>M6: Broken Cryptography</h4>
  <div class="panel panel-default">
    <div class="panel-heading">
      <h4 class="panel-title">
        <a data-toggle="collapse" data-parent="#accordion" href="#collapseOne">
          Description
        </a>
      </h4>
    </div>
    <div id="collapseOne" class="panel-collapse collapse in">
      <div class="panel-body">
        <p>Implementing secure cryptographic algorithms can be difficult, especially handling and generating of keys and values used to encrypt sensitive data. Hard-coded keys are commonly seen in mobile and web applications, but these values are especially dangerous when dealing with mobile devices where attackers control and can decode what values are stored in the application binary.</p>
      </div>
    </div>
  </div>
  <div class="panel panel-default">
    <div class="panel-heading">
      <h4 class="panel-title">
        <a data-toggle="collapse" data-parent="#accordion" href="#collapseTwo">
          Bug
        </a>
      </h4>
    </div>
    <div id="collapseTwo" class="panel-collapse collapse">
      <div class="panel-body">
      ItemHelper.swift
      <pre class="swift">
func encryptString(toEncrypt: String) -> String {

    var envPlist = NSBundle.mainBundle().pathForResource("Environment", ofType: "plist")
    var envs = NSDictionary(contentsOfFile: envPlist!)
    var cryptoKey = envs.valueForKey("CryptoKey") as String

    // Create Ciphertext
    let plainText = (toEncrypt as NSString).dataUsingEncoding(NSUTF8StringEncoding)!
    var cipherText = plainText.AES256EncryptWithKey(cryptoKey)

    var ret = cipherText.base64EncodedStringWithOptions(NSDataBase64EncodingOptions.fromRaw(0)!)
    
    NSLog("Encrypting \(toEncrypt) as \(ret)")
    
    return ret
}

func decryptString(toDecrypt: String) -> String {
    var envPlist = NSBundle.mainBundle().pathForResource("Environment", ofType: "plist")
    var envs = NSDictionary(contentsOfFile: envPlist!)
    let cryptoKey = envs.valueForKey("CryptoKey") as String
    
    // Create PlainText
    let cipherData = NSData(base64EncodedString: toDecrypt, options: NSDataBase64DecodingOptions.fromRaw(0)!)
    let cipherText = cipherData.AES256DecryptWithKey(cryptoKey)
    var ret = NSString(data: cipherText, encoding: NSUTF8StringEncoding)
    
    NSLog("Decrypting \(toDecrypt) as \(ret)")
    
    return ret
}</pre>
      </div>
    </div>
  </div>
  <div class="panel panel-default">
    <div class="panel-heading">
      <h4 class="panel-title">
        <a data-toggle="collapse" data-parent="#accordion" href="#collapseThree">
          Solution - Attack
        </a>
      </h4>
    </div>
    <div id="collapseThree" class="panel-collapse collapse">
      <div class="panel-body">
        <ul>
        <li>Locate the stored plist files distributed with the application.
        <li>View the stored value for "CryptoKey" as used by the encrypt and decrypt functions in ItemHelper.swift
        <pre>$ plutil -p Environment.plist 
{
  "TutorialURL" => "http://127.0.0.1:4567/tutorial"
  "CryptoKey" => "password"
  "SecretsURL" => "http://127.0.0.1:4567/secrets"
  "RegisterURL" => "http://127.0.0.1:4567/users/register"
  "AuthenticateURL" => "http://127.0.0.1:4567/users/authenticate"
  "NewSecretURL" => "http://127.0.0.1:4567/secret"
  "UpdateSecretURL" => "http://127.0.0.1:4567/secret/"
}</pre>
        </ul>
      </div>
    </div>
  </div>
  <div class="panel panel-default">
    <div class="panel-heading">
      <h4 class="panel-title">
        <a data-toggle="collapse" data-parent="#accordion" href="#collapseFour">
          Solution - Fix
        </a>
      </h4>
    </div>
    <div id="collapseFour" class="panel-collapse collapse">
      <div class="panel-body">
        <p>Keys used to encrypt sensitive values should be randomly-generated specific to each user of the application. Keys should be protected within the iOS keychain to prevent unauthorized access.</p>
      </div>
    </div>
  </div>

  <div class="panel panel-default">
    <div class="panel-heading">
      <h4 class="panel-title">
        <a data-toggle="collapse" data-parent="#accordion" href="#collapseFive">
          Hint
        </a>
      </h4>
    </div>
    <div id="collapseFive" class="panel-collapse collapse">
      <div class="panel-body">
        <p>Where does the key come from in ItemHelper.swift?</p>
      </div>
    </div>
  </div>

    <div class="panel panel-default">
    <div class="panel-heading">
      <h4 class="panel-title">
        <a data-toggle="collapse" data-parent="#accordion" href="#collapseSix">
          Reference
        </a>
      </h4>
    </div>
    <div id="collapseSix" class="panel-collapse collapse">
      <div class="panel-body">
        <a href="https://www.owasp.org/index.php/Mobile_Top_10_2014-M6">
        OWASP Mobile Top 10 2014 - M6 - Broken Cryptography
        </a>
      </div>
    </div>
  </div>

</div>