//
//  CVulnerability.h
//  XSecurity
//
//  Created by Pedraita, Raymund on 12/17/13.
//  Copyright (c) 2014 XSecurity Project. All rights reserved.
//

#import <Foundation/Foundation.h>

typedef enum _TAG_E_SEVERITY
{
    E_SEVERITY_WARN = 0,
    E_SEVERITY_LOW,
    E_SEVERITY_MID,
    E_SEVERITY_HIGH,
    E_SEVERITY_MAX,
    E_SEVERITY_INVALID
} E_SEVERITY ;

// Hack:
// This needs to be here because it will create a circular import and CVulnCategory won't know E_SEVERITY

// At this point #import "CVulnCategory.h" won't really matter because CVulnCateogry.h also imports CVulnerabilty.h
// thus the workaround is to use a forward declaration of CVulnCategory
#import "CVulnCategory.h"

@class CVulnCategory ;
@class CTargetCode ;

//////////////////////////////////////////////////////////////////////////////////////

//TODO: Make this a real requirement to subclasses of CVulnerability
@protocol PVulnActions

@required
- (id) initWithName: (NSString     *) szName
          eSeverity: (E_SEVERITY    ) eSeverity
      bStripComment: (BOOL          ) bStripComment
      szDescription: (NSString     *) szDescription
      aszReferences: (NSArray      *) aszReferences
      // Every subclass should have their own interpretation of instances
      dicInstances : (NSDictionary *)  dicInstances
      objCategory  : (CVulnCategory *) objCategory ;

@optional
- (NSArray *) initInstancesFromDictionary: (NSDictionary *)dicInstances ;
- (NSArray *) detect: (CTargetCode *) objTarget bCommentRemoved: (BOOL) bCommentRemoved ;
- (NSArray *) generateExpressions ;

@end

//////////////////////////////////////////////////////////////////////////////////////

@protocol PSubVulnActions <PVulnActions>

@optional
- (id) initWithName: (NSString     *) szName
          eSeverity: (E_SEVERITY    ) eSeverity
      bStripComment: (BOOL          ) bStripComment
      szDescription: (NSString     *) szDescription
      aszReferences: (NSArray      *) aszReferences
      // Every subclass should have their own interpretation of instances
      dicInstances : (NSDictionary *)  dicInstances
      objCategory  : (CVulnCategory *) objCategory ;

- (NSArray *) detect: (CTargetCode *) objTarget bCommentRemoved: (BOOL) bCommentRemoved ;

@required
- (NSArray *) initInstancesFromDictionary: (NSDictionary *)dicInstances ;
- (NSArray *) generateExpressions ;

@end


//////////////////////////////////////////////////////////////////////////////////////
@interface CVulnerability : NSObject <PVulnActions>
{
    
@private
    NSString    *m_szName ;
    E_SEVERITY   m_eSeverity ;
    BOOL         m_bStripComment ;
    NSString    *m_szDescription ;
    NSArray     *m_aszReferences ;

    // Internal member vars
    NSArray       *m_aRegExps ; // An array of NSRegularExpression
    CVulnCategory *m_objCategory ;
}

// For some reason I thought I need a property (a lot maybe? :-))
// This should be an array of subclasses of CInstance
@property ( readonly, getter = getInstances ) NSArray *m_aobjInstances ;

- (id) init ;
- (id) initWithName: (NSString     *) szName
          eSeverity: (E_SEVERITY    ) eSeverity
      bStripComment: (BOOL          ) bStripComment
      szDescription: (NSString     *) szDescription
      aszReferences: (NSArray      *) aszReferences
      // Every subclass should have their own interpretation
      dicInstances : (NSDictionary *)  dicInstances
      objCategory  : (CVulnCategory *) objCategory ;

- (void) dealloc ;

- (NSString *)      getName ;
- (E_SEVERITY)      getSeverity ;
- (BOOL)            willStripComment ;
- (NSString *)      getDescription ;
- (NSArray *)       getRegExpressions ;
- (CVulnCategory *) getCategory ;

@end

