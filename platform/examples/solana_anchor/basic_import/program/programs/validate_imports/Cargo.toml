[package]
name = "validate_imports"
version = "0.0.0"
description = """
Validates the CIDL import feature, this CIDL will import other CIDLs and won't add new inputs
verifies the following in a CIDL import context:
- The purpose of this CIDL is to validate all the supported features for an account
- Verifies it can define a Non-PDA account with one field
- Verifies it can define PDA account with one field and a static seed
- Verifies it can define PDA account with one field, a static and dynamic seed
- Verifies it can define PDA account with all the possible seeds data types
- Verifies account space is calculated automatically
- Verifies it can mark an account as mutable
- Verifies it can mark an account as immutable
- Verifies it can generate the code to initialize an account in \"Singleton mode\" a.k.a init
- Verifies it can generate the code to initialize an account in \"Non-Singleton mode\" a.k.a init_if_needed
- Verifies the fee payer is the default payer when using an initialization method without explicitly specifying the payer
- Verifies it can close a Non-PDA account
- Verifies it can close a PDA account
- Verifies the fee payer is the default lamport receiver when a rent receiver is not specify
- Verifies the usage of multiple signers
- Verifies we can specify a rent-payer to an account when initializing
- Verifies we can specify a rent-receiver to an account when closing it
- Verifies we can map a signer to an account seed
- Verifies we can map an input to an account seed
- Verifies a Non-PDA account can be signer
- Verifies all the supported types for PDA accounts
- Verifies all the supported types for Non-PDA accounts
- Verifies all the supported types for inputs
- The business logic should assign the input to the account's field
- The business logic test should verified that the input's values is the same value assign to the account's field
- Verifies the owner of an account is the program id
- Verifies the owner of an account is the program id when the owner property is omitted
- Verifies the owner of an account is another (external) program
- Verifies account length
- Verifies PDA seeds
- Verifies an account is a signer
- Verifies signer's owner equals a type's owner
- Verifies a signer matches exactly an address
- Verifies a signer is an executable account"""

edition = "2021"

[lib]
crate-type = ["cdylib", "lib"]
name = "validate_imports"

[features]
no-entrypoint = []
no-idl = []
no-log-ix-name = []
cpi = ["no-entrypoint"]
default = []

[dependencies]
anchor-lang = "0.29.0"
solana-program = "=1.17.0"
ahash = "=0.8.6"
bumpalo = "=3.14.0"
validate_accounts = { path = "../lib_validate_accounts_v0_0_0", features = ["cpi"] }
validate_advanced_cases = { path = "../lib_validate_advanced_cases_v0_0_0", features = ["cpi"] }
validate_data_types = { path = "../lib_validate_data_types_v0_0_0", features = ["cpi"] }