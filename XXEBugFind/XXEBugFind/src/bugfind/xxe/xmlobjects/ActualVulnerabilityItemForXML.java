/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package bugfind.xxe.xmlobjects;

import bugfind.sootadapters.CallGraphObject;
import bugfind.sootadapters.MethodDefinition;
import bugfind.xxe.ActualVulnerabilityItem;
import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;

/**
 * An actual vulnerability item for XML
 * @author Mikosh
 */
@XmlRootElement(name = "ActualVulnerabilityItem")
@XmlAccessorType (XmlAccessType.FIELD)
public class ActualVulnerabilityItemForXML {
    @XmlElement (name = "VariantType")
    private String variantType;
    
    @XmlElement (name = "VulnerabilityDefinition")
    private MethodDefinition vulnerabilityDefinition;
    
    @XmlElement (name = "Reason")
    private String reason;
    
    @XmlElement (namespace = "Occurrence")
    private List<Occurrence> occurrences;
            
    
    /**
     * Create a ActualVulnerabilityItemForXML
     */
    public ActualVulnerabilityItemForXML() {
    }
    
    /**
     * Converts from an ActualVulnerabilityItem to ActualVulnerabilityItemForXML object 
     * @param avi the ActualVulnerabilityItem to convert
     * @return an ActualVulnerabilityItemForXML
     */
    public static ActualVulnerabilityItemForXML convertToActualVulnerabilityForXML(ActualVulnerabilityItem avi) {
        ActualVulnerabilityItemForXML avix = new ActualVulnerabilityItemForXML();
        avix.setVulnerabilityDefinition(avi.getVulnerabilityDefinitionItem().getMethodDefinition());
        avix.setReason(avi.getReason());
        List<Occurrence> listOC = new ArrayList<>();
       
        for (int i=0; i<avi.getOccurrencesList().size(); ++i) {
            Occurrence oc = new Occurrence();
            oc.setOccurrenceInfo(avi.getCallSiteDetail(i));
            oc.setExploitationRoutes(CallGraphObject.getCallTracesForCallSiteAsStringList(avi.getOccurrencesList().get(i)));
            listOC.add(oc);
        }
       
        
        String decorClassName = avi.getVulnerabilityDefinitionItem().getMethodDefinition().getClassName();

//        if (decorClassName.contains(".")) {
//            int index = decorClassName.lastIndexOf(".");
//            decorClassName = decorClassName.substring(index + 1);
//        }    
        avix.setVariantType(decorClassName);
        
//        ps.println("XXE Variant-" + n + " due to using " + decorClassName
//                        + " API. See detail: \n" + avi);
//                ps.println("Reason: " + avi.getReason());
        
        avix.setOccurrences(listOC);
        
        return avix;
    }
    
    /**
     * converts to ActualVulnerabilityItemForXML
     * @param listAVI the value to use
     * @return 
     */
    public static List<ActualVulnerabilityItemForXML> toActualVulnerabilityItemForXMLs(List<ActualVulnerabilityItem> listAVI) {
        List<ActualVulnerabilityItemForXML> listAVIX = new ArrayList<>();
        for (ActualVulnerabilityItem avi : listAVI) {
            ActualVulnerabilityItemForXML avix = convertToActualVulnerabilityForXML(avi);
            listAVIX.add(avix);
        }
        
        return listAVIX;
    }

    /**
     * @return the vulenrabilityDefiniton
     */
    public MethodDefinition getVulnerabilityDefinition() {
        return vulnerabilityDefinition;
    }

    /**
     * @param vulnerabilityDefinition the vulenrabilityDefiniton to set
     */
    public void setVulnerabilityDefinition(MethodDefinition vulnerabilityDefinition) {
        this.vulnerabilityDefinition = vulnerabilityDefinition;
    }

    /**
     * @return the reason
     */
    public String getReason() {
        return reason;
    }

    /**
     * @param reason the reason to set
     */
    public void setReason(String reason) {
        this.reason = reason;
    }

    /**
     * @return the variantType
     */
    public String getVariantType() {
        return variantType;
    }

    /**
     * @param variantType the variantType to set
     */
    public void setVariantType(String variantType) {
        this.variantType = variantType;
    }

    /**
     * @return the occurrences
     */
    public List<Occurrence> getOccurrences() {
        return occurrences;
    }

    /**
     * @param occurrences the occurrences to set
     */
    public void setOccurrences(List<Occurrence> occurrences) {
        this.occurrences = occurrences;
    }
    
    /**
     * A class that denotes an occurrence of an XML vulnerability
     */
    @XmlRootElement
    @XmlAccessorType (XmlAccessType.FIELD)
    public static class Occurrence {
        @XmlElement (name = "OccurrenceInfo")        
        private String occurrenceInfo;
        
        @XmlElement (name =  "ExploitationRoute")       
        private List<String> exploitationRoutes;


        /**
         * @return the description
         */
        public String getOccurrenceInfo() {
            return occurrenceInfo;
        }

        /**
         * @param occurrenceInfo the description to set
         */
        public void setOccurrenceInfo(String occurrenceInfo) {
            this.occurrenceInfo = occurrenceInfo;
        }

        /**
         * @return the exploitationRoutes
         */
        public List<String> getExploitationRoutes() {
            return exploitationRoutes;
        }

        /**
         * @param exploitationRoutes the exploitationRoutes to set
         */
        public void setExploitationRoutes(List<String> exploitationRoutes) {
            this.exploitationRoutes = exploitationRoutes;
        }
        
        
    }
    
    
}
