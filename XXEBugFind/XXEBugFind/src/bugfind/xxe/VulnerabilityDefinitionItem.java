/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package bugfind.xxe;

import bugfind.sootadapters.MethodDefinition;
import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;

/**
 * This class represents the definition of a vulnerability. It takes a method definition describing the vulnerability (i.e. vulnerable method)
 * and a list of possible mitigation solutions for this vulnerability. This means that every VulnerabilityDefinitionItem knows
 * its MitigationItems
 * @author Mikosh
 */
@XmlRootElement
@XmlAccessorType (XmlAccessType.FIELD)
public class VulnerabilityDefinitionItem {
    @XmlElement (name = "MethodDefinition")
    private MethodDefinition methodDefinition;
    @XmlElement(name="VulnerabilityMitigationItem")
    private List<VulnerabilityMitigationItem> mitigationList;

    /**
     * Creates an empty VulnerabilityDefinitionItem
     */
    public VulnerabilityDefinitionItem() {}
    
    /**
     * Constructs a VulnerabilityDefinitionItem when given the method definition (describing the vulnerability) and the
     * mitigation list
     * @param methodDefinition the method definition describing the vulnerability
     * @param mitigationList list of mitigation items
     */
    public VulnerabilityDefinitionItem(MethodDefinition methodDefinition, List<VulnerabilityMitigationItem> mitigationList) {
        this.methodDefinition = methodDefinition;
        this.mitigationList = (mitigationList == null) ? new ArrayList<VulnerabilityMitigationItem>() : mitigationList;
    }
    
    /**
     * Creates a VulnerabilityDefinitionItem when given the method definition only
     * @param methodDefinition the method definition to be used
     */
    public VulnerabilityDefinitionItem(MethodDefinition methodDefinition) {
        this(methodDefinition, null);
    }

    /**
     * Gets the method definition
     * @return the method definition
     */
    public MethodDefinition getMethodDefinition() {
        return methodDefinition;
    }

    /**
     * Gets the mitigation list
     * @return the mitigation list
     */
    public List<VulnerabilityMitigationItem> getMitigationList() {
        return mitigationList;
    }    

    /**
     * Sets the mitigation list. Careful, as the inner list just points to the one passed (ie no copy is made and
     * hence any other reference to the list can modify this list)
     * 
     * @param mitigationList the mitigation list to set
     */
    public void setMitigationList(List<VulnerabilityMitigationItem> mitigationList) {
        this.mitigationList = mitigationList;
    }
    
    /**
     * Adds a mitigation item to the this object's list of mitigation items
     * @param vmi the mitigation item to set
     * @return true if added or false if otherwise (according to return of  List.add(...))
     */
    public boolean addMitigationItem(VulnerabilityMitigationItem vmi) {
        return this.mitigationList.add(vmi);
    }
    
    /**
     * Adds items from the mitigation list to this object's mitigation list
     * @param vmiList the list to add from
     */
    public void addMitigationItemsFromList (List<VulnerabilityMitigationItem> vmiList) {
        for (VulnerabilityMitigationItem vmi : vmiList) {
            this.mitigationList.add(vmi);
        }        
    }
}
