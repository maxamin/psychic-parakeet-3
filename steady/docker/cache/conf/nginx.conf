user                            nginx;
worker_processes                auto;
worker_rlimit_nofile            10000;
error_log                       /var/log/nginx/errorall.log warn;
pid                             /var/run/nginxall.pid;
events {
    worker_connections          10000; # Eats RAM, 1 million equals to 3GB RAM used
    use                         epoll;
    multi_accept                on;
    accept_mutex                off;
}
http {
    include                     /etc/nginx/mime.types;
    default_type                application/octet-stream;
    access_log                  off;
    sendfile                    on;
    server_tokens               off;
    keepalive_timeout           300;
    keepalive_requests          100000;
    tcp_nopush                  on;
    tcp_nodelay                 on;
    client_body_buffer_size     128k;
    client_header_buffer_size   1m;
    large_client_header_buffers 4 4k;
    output_buffers              2 32k;

    # http://nginx.org/en/docs/http/ngx_http_core_module.html#open_file_cache
    # Cache file descriptors, information on existence of directories, file lookup errors. Used to boost the cache defined below.
    open_file_cache             max=200000 inactive=20s;
    open_file_cache_valid       30s;
    open_file_cache_min_uses    2;
    open_file_cache_errors      on;

    # http://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_cache_path
    # cache will have a maximum size of 10GB, keys will be stored in a location named STATIC which is large 20MB (1MB holds 8000 keys), if a key is not accessed by any client in 1 month it will be removed. Only 200 will be cached. If the cache gets full the least recently used data is discarded.
    proxy_cache_path            /tmp/cache_all levels=1:2 keys_zone=STATIC:20m inactive=1M max_size=10g use_temp_path=off;
    server {
        listen 80;
        location / {
            if ($request_uri ~ health) {
                set $nocache    1;
            }
            aio                 threads;
            resolver 127.0.0.11 [::1]; # Default Docker DNS resolver. See https://stackoverflow.com/a/53516543/3482533
            set $bcknd          http://$http_XBackend$uri$is_args$args;
            proxy_pass          $bcknd;
            proxy_no_cache      $nocache;
            proxy_cache_bypass  $nocache;
            proxy_cache         STATIC;
            proxy_cache_valid   200 1M;
            proxy_cache_valid   any 0;
            proxy_cache_key     "$request_method$host$request_uri$http_x_vulas_space";
            add_header          X-Proxy-Cache $upstream_cache_status;
            add_header          X-Cache-Date $upstream_http_date;
        }
    }
}
