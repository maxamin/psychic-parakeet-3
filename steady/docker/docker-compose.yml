version: '2.4'

# This Docker Compose application makes use of profiles, available as of Docker
# Compose 1.28.
#
# - Core services: haproxy, rest-backend and postgresql need to always run
# - UI services: frontend-apps, frontend-bugs and cache deliver OpenUI5 Web
#   applications for scan results (http://localhost:8033/apps) and
#   vulnerabilities (http://localhost:8033/bugs).
# - VDB services: rest-lib-utils, kb-importer and patch-lib-analyzer update
#   the vulnerability database and resolve unassessed findings (by comparing
#   method bodies obtained from rest-lib-utils)
#
# The different profiles can be started using start-steady.sh or using Docker
# Compose's --profile option, e.g. docker-compose --profile ui up -d --build

services:

  # Core services
  haproxy:
    container_name: steady-haproxy
    hostname: haproxy
    env_file: .env
    image: haproxy:2.3-alpine
    ports:
      - "8033:8080"
      - "8034:7070"
    volumes:
      - "./haproxy/conf/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg"
    command: ["haproxy", "-f", "/usr/local/etc/haproxy/haproxy.cfg"]
    depends_on:
      - rest-backend
    security_opt:
      - no-new-privileges
    restart: always

  rest-backend:
    container_name: steady-rest-backend
    hostname: rest-backend
    env_file:
      - .env
      - ./rest-backend/conf/restbackend.properties
    image: eclipse/steady-rest-backend:${VULAS_RELEASE}
    expose:
      - "8091"
    environment:
      - DELAY_STARTUP=5
      - vulas.shared.cia.serviceUrl=http://rest-lib-utils:8092/cia
      - vulas.shared.cve.serviceUrl=https://services.nvd.nist.gov/rest/json/cve/1.0/<ID>
      - spring.datasource.username=${POSTGRES_USER}
      - spring.datasource.password=${POSTGRES_PASSWORD}
    volumes:
      - "./rest-backend/data:/flyway-callbacks"
    depends_on:
      - postgresql
    security_opt:
      - no-new-privileges
    restart: always

  postgresql:
    container_name: steady-postgresql
    hostname: postgresql
    image: postgres:11-alpine
    environment:
      - POSTGRES_DB=vulas
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - PGDATA=/var/lib/postgresql/data
    ports:
      - "8032:5432"
    volumes:
      - steady-postgres-data:/var/lib/postgresql/data
      - ./postgresql/conf:/docker-entrypoint-initdb.d:ro
    security_opt:
      - no-new-privileges
    restart: always

  # UI services
  frontend-apps:
    container_name: steady-frontend-apps
    hostname: frontend-apps
    image: eclipse/steady-frontend-apps:${VULAS_RELEASE}
    expose:
      - "8080"
    depends_on:
      - rest-backend
      - cache
    security_opt:
      - no-new-privileges
    restart: always
    profiles:
      - ui

  frontend-bugs:
    container_name: steady-frontend-bugs
    hostname: frontend-bugs
    image: eclipse/steady-frontend-bugs:${VULAS_RELEASE}
    expose:
      - "8080"
    depends_on:
      - rest-backend
    security_opt:
      - no-new-privileges
    restart: always
    profiles:
      - ui

  cache:
    container_name: steady-cache
    hostname: cache
    image: nginx:alpine
    expose:
      - "80"
    volumes:
      - ./cache/conf/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./cache/data/:/tmp/cache_all/
    security_opt:
      - no-new-privileges
    restart: always
    profiles:
      - ui

  # VDB services
  patch-lib-analyzer:
    container_name: steady-patch-lib-analyzer
    hostname: patch-lib-analyzer
    image: eclipse/steady-patch-lib-analyzer:${VULAS_RELEASE}
    expose:
      - "8080"
    volumes:
      - "./patch-lib-analyzer/data:/patcheval-data"
    depends_on:
      - rest-backend
      - rest-lib-utils
    environment:
      - PATCHEVAL_OPTS=-bug "" -folder /patcheval-data -j -h 0 -p 6
      - vulas.shared.cia.serviceUrl=http://rest-lib-utils:8092/cia
      - vulas.shared.backend.serviceUrl=http://rest-backend:8091/backend
      - vulas.patchEval.onlyAddNewResults=true
    security_opt:
      - no-new-privileges
    restart: always
    profiles:
      - vdb

  rest-lib-utils:
    container_name: steady-rest-lib-utils
    hostname: rest-lib-utils
    image: eclipse/steady-rest-lib-utils:${VULAS_RELEASE}
    expose:
        - "8092"
    volumes:
      - "./rest-lib-utils/data:/root/"
    security_opt:
      - no-new-privileges
    restart: always
    profiles:
      - vdb

  kb-importer:
    container_name: steady-kb-importer
    image: eclipse/steady-kb-importer:${VULAS_RELEASE}
    env_file: .env
    volumes:
      - "./kb-importer/conf:/kb-importer/conf"
      - "./kb-importer/certs:/kb-importer/certs"
      - "./kb-importer/data:/kb-importer/data:delegated"
    environment:
      - CIA_SERVICE_URL=http://rest-lib-utils:8092/cia
      - BACKEND_SERVICE_URL=http://rest-backend:8091/backend
    depends_on:
      - rest-backend
      - rest-lib-utils
    security_opt:
      - no-new-privileges
    restart: always
    profiles:
      - vdb

volumes:
  steady-postgres-data:
