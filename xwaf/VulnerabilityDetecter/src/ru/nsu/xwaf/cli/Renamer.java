package ru.nsu.xwaf.cli;

import java.util.Random;

/**
 * Utilities class for renaming query-string
 * @author Maxim Elchugin
 */
public class Renamer {

    // necessary constants to get rid of "magic numbers"
    //public static final int TO_HEX = 1;
    //public static final int TO_ANOTHER_CASE = 2;

    public enum RenamerOption {
        NO_RENAME,
        TO_HEX,
        TO_ANOTHER_CASE
    }

    /**
     * Renames user's string.
     * <p>Base method, which called from memory program
     *
     * @param query string which will be changed
     * @param opt set mode of renaming
     * @return new renamed string
     */
    public static String rename(String query, RenamerOption opt) {
        String renamedString;

        switch (opt) {
            case TO_HEX:
                renamedString = toHexString(query);
                break;
            case TO_ANOTHER_CASE:
                renamedString = randomChangeCase(query);
                break;
            default:
                renamedString = query;
        }

        return renamedString;
    }

    /**
     * Translates char-string to hex-string
     *
     * @param str string to renaming
     */
    private static String toHexString(String str) {
        StringBuffer result = new StringBuffer();
        int n = str.length();
        //	if( n == 0 ) // need do something
        for (int i = 0; i < n; i++) {
            char character = str.charAt(i);
            result.append('%');
            char2hex(character, result);
        }
        return result.toString();
    }

    /**
     * Translates char to hex code
     *
     * @param c char to translating
     * @param buf {@link StringBuffer} in which is appended result
     */
    private static void char2hex(char c, StringBuffer buf) {
        char[] hexChars = {'0', '1', '2', '3', '4', '5', '6', '7', '8',
                '9', 'A', 'B', 'C', 'D', 'E', 'F'};

        int workCodeOfChar = c & 0x00ff;
        int high = ((workCodeOfChar & 0xf0) >> 4);
        int low = (workCodeOfChar & 0x0f);

        buf.append(hexChars[high]);
        buf.append(hexChars[low]);
    }

    /**
     * Changes case of random number of symbols
     *
     * @param str string to translating
     */
    private static String randomChangeCase(String str) {
        StringBuilder result = new StringBuilder(str);
        Random random = new Random();
        int n = str.length();

        for (int i = 0; i < n; i++) {
            char c = str.charAt(i);
            if (Character.isLetter(c)) {
                if (random.nextInt(2) == 0) {
                    c = changeSymbolCase(c);
                }
            }
            result.setCharAt(i, c);
        }

        return result.toString();
    }

    /**
     * Changes case of symbol
     * @param c symbol to changing
     * @return symbol with changed case
     */
    private static char changeSymbolCase(char c) {
        if (Character.isUpperCase(c)) {
            return Character.toLowerCase(c);
        }
        else {
            return Character.toUpperCase(c);
        }
    }
}
