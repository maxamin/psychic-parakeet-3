package ru.nsu.xwaf.cli;

import java.io.BufferedReader;
import java.io.DataOutputStream;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.URL;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

/**
 *
 * @author daredevil
 */
public class Extractor {

    private Set<String> seenLinks;
    private String requestMetod = "GET";
    private String postContent = "";
    private String cookieContent = "";

    /**
     *
     */
    public Extractor() {
        this.seenLinks = new HashSet<String>();
    }

    public void setRequestMetod(String request) {
        requestMetod = request;
    }

    public void setPostContent(String content) {
        postContent = content;
    }

    public void setCookie(String cookie) {
        cookieContent = cookie;
    }

    /**
     *
     * @param url
     */
    public String getPage(URL url) {
        BufferedReader reader = null;
        StringBuilder responseStr = new StringBuilder();
        try {
            HttpURLConnection connection = (HttpURLConnection) url.openConnection();

            connection.setRequestMethod(requestMetod);

            connection.setRequestProperty("Content-Type", "sql scaner");

            connection.setRequestProperty("Content-Length", "" + Integer.toString(postContent.getBytes().length));
            connection.setRequestProperty("Content-Language", "en-US");

            // format: value1=name1&value2=name2&... 
            connection.setRequestProperty("Content", postContent);
            // format: value1=name1;value2=name2;...
            connection.setRequestProperty("Cookie", cookieContent); //

            connection.setUseCaches(false);
            connection.setDoInput(true);
            connection.setDoOutput(true);


            //connection.connect();

            //Send request
            DataOutputStream wr = new DataOutputStream(connection.getOutputStream());
            wr.write(postContent.getBytes());
            wr.flush();
            //wr.close ();
            connection.connect();
            reader = new BufferedReader(new InputStreamReader(connection.getInputStream()));
            String line = null;
            while ((line = reader.readLine()) != null) {
                responseStr.append(line).append("\n");
            }
            // print all headers
           /* for (int i = 0;; i++) {
             String headerName = connection.getHeaderFieldKey(i);
             String headerValue = connection.getHeaderField(i);

             if (headerName == null && headerValue == null) {
             // No more headers
             break;
             } else if (headerName == null) {
             System.out.println(headerValue);
             } else {
             System.out.println(headerName + ": " + headerValue);
             }
             }*/

        } catch (Exception ex) {
            System.out.println(ex.toString());
        } finally {
            if (reader != null) {
                try {
                    reader.close();
                } catch (IOException ioe) {
                    ioe.printStackTrace();
                }
            }
        }
        return responseStr.toString();
    }

    public List<String> getLinks(String page) {
        List<String> links = new ArrayList<String>();
        return links;
    }
}
